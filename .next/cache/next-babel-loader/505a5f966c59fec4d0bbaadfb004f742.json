{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aliab\\\\Documents\\\\GitProjects\\\\nrc-data\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/layout\";\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"nikeService\", void 0);\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getData = this.getData.bind(this);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"NRC Data\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"This app creates several visualizations from your running data from the Nike Run Club app.\"), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"Nike Username\", __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.username,\n      name: \"username\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    })), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"Password\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    })), __jsx(\"button\", {\n      onClick: () => this.getData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"Get data\"));\n  }\n\n  getData() {}\n\n  handleChange(e) {\n    this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/aliab/Documents/GitProjects/nrc-data/pages/index.js"],"names":["Layout","Index","React","Component","constructor","props","state","username","password","handleChange","bind","getData","render","e","setState","target","name","value"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAE/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe;;AAEf,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,QAAQ,EAAC;AAAxB,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AAEH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,QAArC;AAA+C,MAAA,IAAI,EAAC,UAApD;AAA+D,MAAA,QAAQ,EAAE,KAAKE,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAHJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKC,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CANJ,EASI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKE,OAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,CADJ;AAaH;;AAEDA,EAAAA,OAAO,GAAG,CACT;;AAEDF,EAAAA,YAAY,CAACI,CAAD,EAAI;AACZ,SAAKC,QAAL,iCACO,KAAKR,KADZ;AAEI,OAACO,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAF9B;AAIH;;AAnC8C","sourcesContent":["import Layout from \"../components/layout\";\r\n\r\nexport default class Index extends React.Component {\r\n    nikeService;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {username: '', password:''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <h2>NRC Data</h2>\r\n                <p>This app creates several visualizations from your running data from the Nike Run Club app.</p>\r\n                <label>Nike Username\r\n                <input type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleChange}/>\r\n                </label>\r\n                <label>Password\r\n                <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                </label>\r\n                <button onClick={() => this.getData()}>Get data</button>\r\n            </Layout>\r\n        )\r\n    };\r\n\r\n    getData() {\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aliab\\\\Documents\\\\GitProjects\\\\nrc-data\\\\pages\\\\visuals.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport var __N_SSG = true;\nexport default function Visuals() {\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 9\n    }\n  }, \"Visuals\");\n}\n_c = Visuals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visuals\");","map":{"version":3,"sources":["C:/Users/aliab/Documents/GitProjects/nrc-data/pages/visuals.js"],"names":["Visuals"],"mappings":";;;;AAAA,eAAe,SAASA,OAAT,GAAmB;AAC9B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH;KAJuBA,O","sourcesContent":["export default function Visuals() {\r\n    return (\r\n        <h1>Visuals</h1>\r\n    )\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    const puppeteer = require('puppeteer');\r\n    const request_client = require('request-promise-native');\r\n    let result = [];\r\n\r\n    await puppeteer.launch().then(async (browser) => {\r\n        const page = await browser.newPage();\r\n        await page.goto('https://www.nike.com/us/en/');\r\n        await page.waitFor(500);\r\n        await page.click('#MobileMenuToggle');\r\n\r\n        await page.evaluate(query => {\r\n            const elements = [...document.querySelectorAll('button.p0-sm.mobile-menu-link')];\r\n            const element = elements.find(e => e.innerText.includes(query));\r\n\r\n            element && element.click();\r\n        }, 'Join/Log In To Nike Member Profile');\r\n        await page.waitForSelector('input[type=email]');\r\n\r\n        await page.focus('input[type=email]');\r\n        await page.keyboard.type('ali.abiba298@gmail.com');\r\n\r\n        await page.focus('input[type=password]');\r\n        await page.keyboard.type('Haidar65*');\r\n\r\n        await page.setRequestInterception(true);\r\n        await page.click('.loginSubmit');\r\n\r\n        page.on('request', request => {\r\n           request_client({\r\n               uri: request.url(),\r\n               resolveWithFullResponse: true\r\n           }).then(response => {\r\n               const request_url = request.url();\r\n               const request_headers = request.headers();\r\n               const request_post_data = request.postData();\r\n               const response_headers = response.headers;\r\n               const response_size = response_headers['content-length'];\r\n               const response_body = response.body;\r\n\r\n               result.push({\r\n                   request_url,\r\n                   request_headers,\r\n                   response_body,\r\n               });\r\n\r\n               request.continue();\r\n           }).catch(err => {\r\n               console.log(err);\r\n               request.abort();\r\n           })\r\n        });\r\n\r\n        await browser.close();\r\n    });\r\n    console.log(result);\r\n\r\n    return {props: {data: 'data'}};\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}